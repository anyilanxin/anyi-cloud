<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.anyilanxin.anyicloud.system.modules.rbac.mapper.RbacOrgRoleMapper">
  <resultMap type="com.anyilanxin.anyicloud.system.modules.rbac.entity.RbacOrgRoleEntity" id="RbacOrgRoleMap">
    <result property="orgRoleId" column="org_role_id" jdbcType="VARCHAR"/>
    <result property="roleName" column="role_name" jdbcType="VARCHAR"/>
    <result property="dataAuthType" column="data_auth_type" jdbcType="INTEGER"/>
    <result property="customDataAuthData" column="custom_data_auth_data" jdbcType="VARCHAR"
            typeHandler="com.baomidou.mybatisplus.extension.handlers.FastjsonTypeHandler"/>
    <result property="roleCode" column="role_code" jdbcType="VARCHAR"/>
    <result property="autoBind" column="auto_bind" jdbcType="INTEGER"/>
    <result property="roleStatus" column="role_status" jdbcType="INTEGER"/>
    <result property="remark" column="remark" jdbcType="VARCHAR"/>
    <result property="uniqueHelp" column="unique_help" jdbcType="VARCHAR"/>
    <result property="createAreaCode" column="create_area_code" jdbcType="VARCHAR"/>
    <result property="createPositionCode" column="create_position_code" jdbcType="VARCHAR"/>
    <result property="createOrgSysCode" column="create_org_sys_code" jdbcType="VARCHAR"/>
    <result property="createSystemCode" column="create_system_code" jdbcType="VARCHAR"/>
    <result property="createTenantId" column="create_tenant_id" jdbcType="VARCHAR"/>
    <result property="createUserId" column="create_user_id" jdbcType="VARCHAR"/>
    <result property="createUserName" column="create_user_name" jdbcType="VARCHAR"/>
    <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    <result property="updateUserId" column="update_user_id" jdbcType="VARCHAR"/>
    <result property="updateUserName" column="update_user_name" jdbcType="VARCHAR"/>
    <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    <result property="delFlag" column="del_flag" jdbcType="INTEGER"/>
    <result property="orgId" column="org_id" jdbcType="VARCHAR"/>
  </resultMap>

  <!-- @formatter:off -->
    <!--数据库字段-->
    <sql id="Column_List">
        org_role_id, role_name, data_auth_type, custom_data_auth_data, role_code, auto_bind, role_status,
        remark, unique_help, create_area_code, create_position_code, create_org_sys_code, create_system_code,
        create_tenant_id, create_user_id, create_user_name, create_time, update_user_id, update_user_name,
        update_time, del_flag, org_id
    </sql>

    <!--数据库字段待别名-->
    <sql id="Column_List_Ali">
        ali.org_role_id, ali.role_name, ali.data_auth_type, ali.custom_data_auth_data, ali.role_code, ali.auto_bind,
        ali.role_status, ali.remark, ali.unique_help, ali.create_area_code, ali.create_position_code, ali.create_org_sys_code,
        ali.create_system_code, ali.create_tenant_id, ali.create_user_id, ali.create_user_name, ali.create_time,
        ali.update_user_id, ali.update_user_name, ali.update_time, ali.del_flag, ali.org_id
    </sql>

     <!--数据库字段-->
    <sql id="Column_List_Page_Ali">
        ali.org_role_id, ali.role_name, ali.role_code, ali.auto_bind,
        ali.role_status, ali.remark, ali.unique_help, ali.create_area_code, ali.create_position_code, ali.create_org_sys_code,
        ali.create_system_code, ali.create_tenant_id, ali.create_user_id, ali.create_user_name, ali.create_time,
        ali.update_user_id, ali.update_user_name, ali.update_time, ali.del_flag, ali.org_id
    </sql>


    <!--通过实体作为筛选条件分页查询-->
    <select id="pageByModel" resultType="com.anyilanxin.anyicloud.system.modules.rbac.service.dto.RbacOrgRolePageDto">
        SELECT
             <include refid="Column_List_Page_Ali"/>
        FROM sys_rbac_org_role ali
        <where>
             ali.del_flag = 0
            <if test="query.keyword != null and query.keyword != ''">
                AND (
                LOCATE(#{query.keyword, jdbcType=VARCHAR}, ali.role_name) &gt; 0
                OR
                LOCATE(#{query.keyword, jdbcType=VARCHAR}, ali.role_code) &gt; 0
                )
            </if>
            <if test='query.roleStatus != null'>
             AND ali.role_status = #{query.roleStatus, jdbcType=INTEGER}
            </if>
            <if test='query.startTime != null'>
             AND ali.create_time &gt;= #{query.startTime, jdbcType=TIMESTAMP}
            </if>
            <if test='query.endTime != null'>
             AND ali.create_time &lt;= #{query.endTime, jdbcType=TIMESTAMP}
            </if>
        </where>
    </select>


    <!-- 通过机构角色id物理删除 -->
    <delete id="physicalDeleteById">
        DELETE
        FROM sys_rbac_org_role
        WHERE org_role_id = #{id, jdbcType=VARCHAR}
    </delete>


    <!-- 通过字典id物理批量删除 -->
    <delete id="physicalDeleteBatchIds">
        DELETE
        FROM  sys_rbac_org_role
        WHERE org_role_id IN
        <foreach collection="coll" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>


    <!-- 通过id逻辑删除 -->
    <update id="deleteById">
        UPDATE sys_rbac_org_role
        <set>
            del_flag = 1,
            unique_help = org_role_id,
         </set>
        WHERE org_role_id = #{orgRoleId, jdbcType=VARCHAR}
    </update>


    <!-- 通过id批量逻辑删除 -->
    <update id="deleteBatchIds">
        UPDATE sys_rbac_org_role
        <set>
            del_flag = 1,
            unique_help = org_role_id,
        </set>
        WHERE org_role_id IN
        <foreach collection="coll" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
    <!-- @formatter:off -->
</mapper>
