<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.anyilanxin.anyicloud.system.modules.manage.mapper.ManageSpecialUrlMapper">

  <resultMap type="com.anyilanxin.anyicloud.system.modules.manage.entity.ManageSpecialUrlEntity"
             id="ManageSpecialUrlMap">
    <result property="specialUrlId" column="special_url_id" jdbcType="VARCHAR"/>
    <result property="urlName" column="url_name" jdbcType="VARCHAR"/>
    <result property="urlDescribe" column="url_describe" jdbcType="VARCHAR"/>
    <result property="urlType" column="url_type" jdbcType="INTEGER"/>
    <result property="specialStatus" column="special_status" jdbcType="INTEGER"/>
    <result property="limitMethod" column="limit_method" jdbcType="INTEGER"/>
    <result property="specialUrlType" column="special_url_type" jdbcType="INTEGER"/>
    <result property="requestMethod" column="request_method" jdbcType="VARCHAR"/>
    <result property="url" column="url" jdbcType="VARCHAR"/>
    <result property="enableDelete" column="enable_delete" jdbcType="INTEGER"/>
    <result property="remark" column="remark" jdbcType="VARCHAR"/>
    <result property="createAreaCode" column="create_area_code" jdbcType="VARCHAR"/>
    <result property="createPositionCode" column="create_position_code" jdbcType="VARCHAR"/>
    <result property="createOrgSysCode" column="create_org_sys_code" jdbcType="VARCHAR"/>
    <result property="createSystemCode" column="create_system_code" jdbcType="VARCHAR"/>
    <result property="createUserId" column="create_user_id" jdbcType="VARCHAR"/>
    <result property="createUserName" column="create_user_name" jdbcType="VARCHAR"/>
    <result property="createTenantId" column="create_tenant_id" jdbcType="VARCHAR"/>
    <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    <result property="updateUserId" column="update_user_id" jdbcType="VARCHAR"/>
    <result property="updateUserName" column="update_user_name" jdbcType="VARCHAR"/>
    <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    <result property="delFlag" column="del_flag" jdbcType="INTEGER"/>
    <result property="customFilterId" column="custom_filter_id" jdbcType="VARCHAR"/>
  </resultMap>
  <!-- @formatter:off -->
    <!--数据库字段-->
    <sql id="Column_List">
        special_url_id, url_name, special_url_type,url_describe, url_type, special_status, limit_method, request_method, url,
        enable_delete, remark, create_area_code, create_position_code, create_org_sys_code, create_system_code,
        create_user_id, create_user_name, create_tenant_id, create_time, update_user_id, update_user_name, update_time,
        del_flag, custom_filter_id
    </sql>

    <!--数据库字段待别名-->
    <sql id="Column_List_Ali">
        ali.special_url_id, ali.url_name, ali.special_url_type,ali.url_describe, ali.url_type, ali.special_status, ali.limit_method,
        ali.request_method, ali.url, ali.enable_delete, ali.remark, ali.create_area_code, ali.create_position_code,
        ali.create_org_sys_code, ali.create_system_code, ali.create_user_id, ali.create_user_name, ali.create_tenant_id,
        ali.create_time, ali.update_user_id, ali.update_user_name, ali.update_time, ali.del_flag, ali.custom_filter_id
    </sql>

    <!--数据库字段-->
    <sql id="Column_List_Page_Ali">
        ali.special_url_id, ali.url_name, ali.special_url_type,ali.url_describe, ali.url_type, ali.special_status, ali.limit_method,
        ali.request_method, ali.url, ali.enable_delete, ali.remark, ali.create_area_code, ali.create_position_code,
        ali.create_org_sys_code, ali.create_system_code, ali.create_user_id, ali.create_user_name, ali.create_tenant_id,
        ali.create_time, ali.update_user_id, ali.update_user_name, ali.update_time, ali.del_flag, ali.custom_filter_id
    </sql>


    <!-- 通过特殊过滤器id物理删除 -->
    <delete id="physicalDeleteById">
        DELETE
        FROM sys_manage_special_url
        WHERE special_url_id = #{id, jdbcType=VARCHAR}
    </delete>


    <!-- 通过字典id物理批量删除 -->
    <delete id="physicalDeleteBatchIds">
        DELETE
        FROM sys_manage_special_url
        WHERE special_url_id IN
        <foreach collection="coll" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>


    <!-- 通过id逻辑删除 -->
    <update id="deleteById">
        UPDATE sys_manage_special_url
        <set>
            del_flag = 1,
        </set>
        WHERE special_url_id = #{specialUrlId, jdbcType=VARCHAR}
    </update>


    <!-- 通过id批量逻辑删除 -->
    <update id="deleteBatchIds">
        UPDATE sys_manage_special_url
        <set>
            del_flag = 1,
        </set>
        WHERE special_url_id IN
        <foreach collection="coll" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
    <!-- @formatter:off -->
</mapper>
