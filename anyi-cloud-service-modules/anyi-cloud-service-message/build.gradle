bootJar { enabled = true }


dependencies {
    implementation project(':anyi-cloud-core-modules:anyi-cloud-core-mvc')
    implementation project(':anyi-cloud-core-modules:anyi-cloud-core-oauth2-mvc')
    implementation project(':anyi-cloud-rpc-modules:anyi-cloud-rpc-message')
    implementation project(':anyi-cloud-core-modules:anyi-cloud-core-redis')
    api project(':anyi-cloud-core-modules:anyi-cloud-core-stream')
    implementation project(':anyi-cloud-core-modules:anyi-cloud-core-database')
    implementation('org.springframework.boot:spring-boot-starter-websocket') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    implementation 'org.springframework.boot:spring-boot-starter-freemarker'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'com.alibaba.cloud:aliyun-sms-spring-boot-starter'
    implementation rootProject.ext.dependencies["aliyun-java-sdk-core"]
    implementation rootProject.ext.dependencies["tencentcloud-sdk-java"]
}


// 判断是否输出到统一目录
if (rootProject.ext["compileBootJarToParent"]) {
    tasks.withType(Jar) {
        destinationDirectory = file("$project.parent.buildDir/bootJar")
    }
}


// 判断是否分离打包
if (rootProject.ext["compileSeparate"]) {
    // 分离打包处理
    task clearJar(type: Delete) {
        delete "$buildDir/libs/lib"
    }

    task copyJar(type: Copy) {
        from project.configurations.productionRuntimeClasspath
        into "$buildDir/libs/lib"
        include '*.jar'
        exclude "skillfull*.jar"
    }

    bootJar {
        // 排除外部lib下依赖
        project.configurations.productionRuntimeClasspath.files.collect {
            {
                if (!it.name.startsWith("skillfull")) {
                    exclude(it.name)
                }
            }
        }
        // 打包前清空
        dependsOn clearJar
        dependsOn copyJar
        // 指定依赖包的路径
        manifest {
            attributes "Manifest-Version": 1.0,
                    'Class-Path': project.configurations.productionRuntimeClasspath.files.collect { "lib/$it.name" }.join(' ')
        }
    }
}
