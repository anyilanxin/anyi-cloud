spring:
  main:
    allow-bean-definition-overriding: true
    allow-circular-references: true
  datasource:
    dynamic:
      primary: master
      druid:
        # 初始化连接大小
        initial-size: 10
        # 最小空闲连接数
        min-idle: 5
        max-active: 20
        max-wait: 30000
        # 可关闭的空闲连接间隔时间
        time-between-eviction-runs-millis: 60000
        # 配置连接在池中的最小生存时间
        min-evictable-idle-time-millis: 300000
        validation-query: select '1' from dual
        test-while-idle: true
        test-on-borrow: false
        test-on-return: false
        #关闭长时间不使用的连接
        remove-abandoned: true
        log-abandoned: true
        # 打开PSCache，并且指定每个连接上PSCache的大小
        pool-prepared-statements: false
        max-pool-prepared-statement-per-connection-size: 20
  jackson:
    time-zone: Asia/Shanghai
    date-format: yyyy-MM-dd HH:mm:ss
  redis:
    database: ${redis.database:0}
    host: ${redis.host:localhost}
    password: ${redis.password:root}
    port: ${redis.port:6379}
    timeout: 5000
    lettuce:
      pool:
        max-idle: 20
        max-wait: -1
        min-idle: 0
        max-active: 200
  rabbitmq:
    host: ${rbmq.host:localhost}
    port: ${rbmq.port:5672}
    username: ${rbmq.username:guest}
    password: ${rbmq.password:guest}
  cloud:
    sentinel:
      log:
        dir: ./logs
    function:
      definition: socketProcess
    stream:
      bindings:
        socketProcess-in-0:
          destination: socketProcess
        socketProcess-out-0:
          destination: socketProcess
        operateLogProcess-out-0:
          destination: operateLogProcess
          group: logging-service


# server配置
server:
  shutdown: graceful
  servlet:
    encoding:
      force: true
      charset: UTF-8
      enabled: true
  undertow:
    buffer-size: 1024
    direct-buffers: true
    threads:
      io: 4
      worker: 56
  # 使其获取请求协议使用远程的,nginx代理需要设置:proxy_set_header X-Forwarded-Proto $scheme;
  # forward-headers-strategy: framework


# 开启监控
management:
  endpoints:
    web:
      exposure:
        include: "*"
  info:
    java:
      enabled: true


# 日志
logging:
  level:
    root: ${app.log-root-level:debug}
    com.anyilanxin: ${app.log-package-level:debug}
    com.alibaba.nacos: error
  # 生成日志文件路径(注释不会生成)
  pattern:
    dateformat: yyyy-MM-dd HH:mm:ss
  file:
    name: ./logs/${spring.application.name:skillfull}.log
  logback:
    rollingpolicy:
      max-history: 7
  register-shutdown-hook: true
debug: true


# mybatis
mybatis-plus:
  # mapper.xml路径
  mapper-locations: classpath*:com/anyilanxin/skillfull/*/modules/*/mapper/xml/*Mapper.xml
  # 实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.anyilanxin.skillfull.*.modules.*.entity
  global-config:
    banner: false
    db-config:
      # 主键类型(使用snowflake id)
      id-type: ASSIGN_ID
      # 字段插入判断策略
      insert-strategy: not_empty
      # 字段更新判断策略
      update-strategy: not_null
      # 字段查询判断策略
      where-strategy: not_empty
  configuration:
    # 配置数据库驼峰与下划线互转
    map-underscore-to-camel-case: true
    cache-enabled: false


# feign相关配置
feign:
  okhttp:
    enabled: true
  client:
    config:
      default:
        connectTimeout: 120000 # 连接超时(ms)
        readTimeout: 120000  # 读取超时(ms)


# api文档配置
springdoc:
  version: ${spring.application.version:1.0.0}
  api-prefix: /api${server.servlet.context-path:} # api接口调试地址前缀(不需要写请求协议,浏览器自动拼接)
  headers:
    - skill-full-token
    - Authorization
  title: ${spring.application.name:skillfull}服务
  contact-email: z7630853@163.com
  contact-user: zxiaozhou
  api-docs:
    enabled: ${app.enable-doc:false}
  packages-to-scan: com.anyilanxin.skillfull
  swagger-ui:
    enabled: ${app.enable-doc:false}
