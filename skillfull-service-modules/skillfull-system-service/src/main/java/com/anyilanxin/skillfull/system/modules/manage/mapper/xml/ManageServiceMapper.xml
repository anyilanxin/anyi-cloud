<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.anyilanxin.skillfull.system.modules.manage.mapper.ManageServiceMapper">

  <resultMap type="com.anyilanxin.skillfull.system.modules.manage.entity.ManageServiceEntity" id="ManageServiceMap">
    <result property="serviceId" column="service_id" jdbcType="VARCHAR"/>
    <result property="serviceCode" column="service_code" jdbcType="VARCHAR"/>
    <result property="serviceName" column="service_name" jdbcType="VARCHAR"/>
    <result property="isLoadBalancer" column="is_load_balancer" jdbcType="INTEGER"/>
    <result property="enableSwagger" column="enable_swagger" jdbcType="INTEGER"/>
    <result property="swaggerConfigUrl" column="swagger_config_url" jdbcType="VARCHAR"/>
    <result property="subscribeChange" column="subscribe_change" jdbcType="INTEGER"/>
    <result property="noticeChange" column="notice_change" jdbcType="INTEGER"/>
    <result property="noticeType" column="notice_type" jdbcType="INTEGER"/>
    <result property="serviceState" column="service_state" jdbcType="INTEGER"/>
    <result property="serviceMetadataJson" column="service_metadata_json" jdbcType="VARCHAR"
            typeHandler="com.baomidou.mybatisplus.extension.handlers.FastjsonTypeHandler"/>
    <result property="noticeTemplateId" column="notice_template_id" jdbcType="VARCHAR"/>
    <result property="headUserName" column="head_user_name" jdbcType="VARCHAR"/>
    <result property="headUserId" column="head_user_id" jdbcType="VARCHAR"/>
    <result property="enableDelete" column="enable_delete" jdbcType="INTEGER"/>
    <result property="remark" column="remark" jdbcType="VARCHAR"/>
    <result property="uniqueHelp" column="unique_help" jdbcType="VARCHAR"/>
    <result property="createAreaCode" column="create_area_code" jdbcType="VARCHAR"/>
    <result property="createPositionCode" column="create_position_code" jdbcType="VARCHAR"/>
    <result property="createOrgSysCode" column="create_org_sys_code" jdbcType="VARCHAR"/>
    <result property="createSystemCode" column="create_system_code" jdbcType="VARCHAR"/>
    <result property="createTenantId" column="create_tenant_id" jdbcType="VARCHAR"/>
    <result property="createUserId" column="create_user_id" jdbcType="VARCHAR"/>
    <result property="createUserName" column="create_user_name" jdbcType="VARCHAR"/>
    <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    <result property="updateUserId" column="update_user_id" jdbcType="VARCHAR"/>
    <result property="updateUserName" column="update_user_name" jdbcType="VARCHAR"/>
    <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    <result property="delFlag" column="del_flag" jdbcType="INTEGER"/>
  </resultMap>
  <!-- @formatter:off -->
    <!--数据库字段-->
    <sql id="Column_List">
        service_id, service_code, service_name, is_load_balancer, enable_swagger, swagger_config_url, subscribe_change,
        notice_change, notice_type, service_state, service_metadata_json, notice_template_id, head_user_name,
        head_user_id, enable_delete, remark, unique_help, create_area_code, create_position_code, create_org_sys_code,
        create_system_code, create_tenant_id, create_user_id, create_user_name, create_time, update_user_id,
        update_user_name, update_time, del_flag
    </sql>

    <!--数据库字段待别名-->
    <sql id="Column_List_Ali">
        ali.service_id, ali.service_code, ali.service_name, ali.is_load_balancer, ali.enable_swagger,
        ali.swagger_config_url, ali.subscribe_change, ali.notice_change, ali.notice_type, ali.service_state,
        ali.service_metadata_json, ali.notice_template_id, ali.head_user_name, ali.head_user_id, ali.enable_delete,
        ali.remark, ali.unique_help, ali.create_area_code, ali.create_position_code, ali.create_org_sys_code,
        ali.create_system_code, ali.create_tenant_id, ali.create_user_id, ali.create_user_name, ali.create_time,
        ali.update_user_id, ali.update_user_name, ali.update_time, ali.del_flag
    </sql>

    <!--数据库字段-->
    <sql id="Column_List_Page_Ali">
        ali.service_id, ali.service_code, ali.service_name, ali.is_load_balancer, ali.enable_swagger,
        ali.swagger_config_url, ali.subscribe_change, ali.notice_change, ali.notice_type, ali.service_state,
        ali.service_metadata_json, ali.notice_template_id, ali.head_user_name, ali.head_user_id, ali.enable_delete,
        ali.remark, ali.unique_help, ali.create_area_code, ali.create_position_code, ali.create_org_sys_code,
        ali.create_system_code, ali.create_tenant_id, ali.create_user_id, ali.create_user_name, ali.create_time,
        ali.update_user_id, ali.update_user_name, ali.update_time, ali.del_flag
    </sql>


    <!--通过实体作为筛选条件分页查询-->
    <select id="pageByModel"
            resultType="com.anyilanxin.skillfull.system.modules.manage.service.dto.ManageServicePageDto">
        SELECT
        <include refid="Column_List_Page_Ali"/>
        FROM sys_manage_service ali
        <where>
            ali.del_flag = 0
            <if test="query.serviceCode != null and query.serviceCode != ''">
                AND LOCATE(#{query.serviceCode, jdbcType=VARCHAR}, ali.service_code) &gt; 0
            </if>
            <if test="query.serviceName != null and query.serviceName != ''">
                AND LOCATE(#{query.serviceName, jdbcType=VARCHAR}, ali.service_name) &gt; 0
            </if>
            <if test="query.serviceState != null">
                AND ali.service_state = #{query.serviceState, jdbcType=INTEGER}
            </if>
            <if test="query.startTime != null">
                AND ali.create_time &gt;= #{query.startTime, jdbcType=TIMESTAMP}
            </if>
            <if test="query.endTime != null">
                AND ali.create_time &lt;= #{query.endTime, jdbcType=TIMESTAMP}
            </if>
        </where>
    </select>


    <!-- 通过服务id物理删除 -->
    <delete id="physicalDeleteById">
        DELETE
        FROM sys_manage_service
        WHERE service_id = #{id, jdbcType=VARCHAR}
    </delete>


    <!-- 通过字典id物理批量删除 -->
    <delete id="physicalDeleteBatchIds">
        DELETE
        FROM sys_manage_service
        WHERE service_id IN
        <foreach collection="coll" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>


    <!-- 通过id逻辑删除 -->
    <update id="deleteById">
        UPDATE sys_manage_service
        <set>
            del_flag = 1,
            unique_help = service_id,
        </set>
        WHERE service_id = #{serviceId, jdbcType=VARCHAR}
    </update>


    <!-- 通过id批量逻辑删除 -->
    <update id="deleteBatchIds">
        UPDATE sys_manage_service
        <set>
            del_flag = 1,
            unique_help = service_id,
        </set>
        WHERE service_id IN
        <foreach collection="coll" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
    <!-- @formatter:off -->
</mapper>
