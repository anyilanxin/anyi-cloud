<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.anyilanxin.skillfull.message.modules.manage.mapper.ManageTemplateMapper">
  <resultMap type="com.anyilanxin.skillfull.message.modules.manage.entity.ManageTemplateEntity"
             id="ManageTemplateMap">
    <result property="templateId" column="template_id" jdbcType="VARCHAR"/>
    <result property="templateName" column="template_name" jdbcType="VARCHAR"/>
    <result property="templateStatus" column="template_status" jdbcType="INTEGER"/>
    <result property="templateCode" column="template_code" jdbcType="VARCHAR"/>
    <result property="templateThirdCode" column="template_third_code" jdbcType="VARCHAR"/>
    <result property="sendMaxNum" column="send_max_num" jdbcType="INTEGER"/>
    <result property="templateType" column="template_type" jdbcType="INTEGER"/>
    <result property="limitSend" column="limit_send" jdbcType="INTEGER"/>
    <result property="maxSendNum" column="max_send_num" jdbcType="INTEGER"/>
    <result property="templateContent" column="template_content" jdbcType="VARCHAR"/>
    <result property="templateContentDescribe" column="template_content_describe" jdbcType="VARCHAR"/>
    <result property="uniqueHelp" column="unique_help" jdbcType="VARCHAR"/>
    <result property="createAreaCode" column="create_area_code" jdbcType="VARCHAR"/>
    <result property="createPositionCode" column="create_position_code" jdbcType="VARCHAR"/>
    <result property="createOrgSysCode" column="create_org_sys_code" jdbcType="VARCHAR"/>
    <result property="createSystemCode" column="create_system_code" jdbcType="VARCHAR"/>
    <result property="createUserId" column="create_user_id" jdbcType="VARCHAR"/>
    <result property="createUserName" column="create_user_name" jdbcType="VARCHAR"/>
    <result property="createTenantId" column="create_tenant_id" jdbcType="VARCHAR"/>
    <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    <result property="updateUserId" column="update_user_id" jdbcType="VARCHAR"/>
    <result property="updateUserName" column="update_user_name" jdbcType="VARCHAR"/>
    <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    <result property="remark" column="remark" jdbcType="VARCHAR"/>
    <result property="delFlag" column="del_flag" jdbcType="INTEGER"/>
  </resultMap>

  <!-- @formatter:off -->
    <!--数据库字段-->
    <sql id="Column_List">
        template_id, template_name, template_status, template_code, template_third_code, send_max_num,
        template_type, limit_send, max_send_num, template_content, template_content_describe, unique_help,
        create_area_code, create_position_code, create_org_sys_code, create_system_code, create_user_id,
        create_user_name, create_tenant_id, create_time, update_user_id, update_user_name, update_time, remark, del_flag
    </sql>

    <!--数据库字段待别名-->
    <sql id="Column_List_Ali">
        ali.template_id, ali.template_name, ali.template_status, ali.template_code, ali.template_third_code,
        ali.send_max_num, ali.template_type, ali.limit_send, ali.max_send_num, ali.template_content, ali.template_content_describe,
        ali.unique_help, ali.create_area_code, ali.create_position_code, ali.create_org_sys_code, ali.create_system_code, ali.create_user_id,
        ali.create_user_name, ali.create_tenant_id, ali.create_time, ali.update_user_id, ali.update_user_name, ali.update_time, ali.remark, ali.del_flag
    </sql>

     <!--数据库字段-->
    <sql id="Column_List_Page_Ali">
        ali.template_id, ali.template_name, ali.template_status, ali.template_code, ali.template_third_code, ali.send_max_num,
        ali.template_type, ali.limit_send, ali.max_send_num, ali.unique_help,
        ali.create_area_code, ali.create_position_code, ali.create_org_sys_code, ali.create_system_code, ali.create_user_id,
        ali.create_user_name, ali.create_tenant_id, ali.create_time, ali.update_user_id, ali.update_user_name, ali.update_time,
        ali.remark, ali.del_flag
    </sql>


    <!--通过实体作为筛选条件分页查询-->
    <select id="pageByModel" resultType="com.anyilanxin.skillfull.message.modules.manage.service.dto.ManageTemplatePageDto">
        SELECT
             <include refid="Column_List_Page_Ali"/>
        FROM msg_manage_template ali
        <where>
             ali.del_flag = 0
          <if test="query.templateName != null and query.templateName != ''">
             AND LOCATE(#{query.templateName, jdbcType=VARCHAR}, ali.template_name) &gt; 0
          </if>
          <if test="query.templateStatus != null">
             AND ali.template_status = #{query.templateStatus, jdbcType=INTEGER}
          </if>
          <if test="query.templateCode != null and query.templateCode != ''">
             AND LOCATE(#{query.templateCode, jdbcType=VARCHAR}, ali.template_code) &gt; 0
          </if>
          <if test="query.templateThirdCode != null and query.templateThirdCode != ''">
             AND LOCATE(#{query.templateThirdCode, jdbcType=VARCHAR}, ali.template_third_code) &gt; 0
          </if>
          <if test="query.templateType != null">
             AND ali.template_type = #{query.templateType, jdbcType=INTEGER}
          </if>
         <if test="query.startTime != null">
             AND ali.create_time &gt;= #{query.startTime, jdbcType=TIMESTAMP}
          </if>
          <if test="query.endTime != null">
             AND ali.create_time &lt;= #{query.endTime, jdbcType=TIMESTAMP}
          </if>
        </where>
    </select>


    <!-- 通过模板id物理删除 -->
    <delete id="physicalDeleteById">
        DELETE
        FROM msg_manage_template
        WHERE template_id = #{id, jdbcType=VARCHAR}
    </delete>


    <!-- 通过字典id物理批量删除 -->
    <delete id="physicalDeleteBatchIds">
        DELETE
        FROM  msg_manage_template
        WHERE template_id IN
        <foreach collection="coll" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>


    <!-- 通过id逻辑删除 -->
    <update id="deleteById">
        UPDATE msg_manage_template
        <set>
            del_flag = 1,
            unique_help = template_id,
         </set>
        WHERE template_id = #{templateId, jdbcType=VARCHAR}
    </update>


    <!-- 通过id批量逻辑删除 -->
    <update id="deleteBatchIds">
        UPDATE msg_manage_template
        <set>
            del_flag = 1,
            unique_help = template_id,
        </set>
        WHERE template_id IN
        <foreach collection="coll" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
    <!-- @formatter:off -->
</mapper>
