// 打包版本号
version = rootProject.ext.version["skillfull-service-modules:skillfull-gateway-service"]['version']


bootJar { enabled = rootProject.ext.version["skillfull-service-modules:skillfull-gateway-service"]['bootJar'] }


dependencies {
    implementation project(':skillfull-core-modules:skillfull-webflux')
    implementation project(':skillfull-core-modules:skillfull-oauth2-webflux')
    implementation project(':skillfull-core-modules:skillfull-oauth2-common')
    implementation project(':skillfull-rpc-modules:skillfull-gateway-rpc')
//    implementation project(':skillfull-core-modules:skillfull-redis')
    implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
    implementation 'com.alibaba.cloud:spring-cloud-alibaba-sentinel-gateway'
    implementation project(':skillfull-core-modules:skillfull-stream')
    implementation project(':skillfull-core-modules:skillfull-logging-webflux')
}


// 判断是否输出到统一目录
if (rootProject.ext["compileBootJarToParent"]) {
    tasks.withType(Jar) {
        destinationDirectory = file("$project.parent.buildDir/bootJar")
    }
}


// 判断是否分离打包
if (rootProject.ext["compileSeparate"]) {
    // 分离打包处理
    task clearJar(type: Delete) {
        delete "$buildDir/libs/lib"
    }

    task copyJar(type: Copy) {
        from project.configurations.productionRuntimeClasspath
        into "$buildDir/libs/lib"
        include '*.jar'
        exclude "skillfull*.jar"
    }

    bootJar {
        // 排除外部lib下依赖
        project.configurations.productionRuntimeClasspath.files.collect {
            {
                if (!it.name.startsWith("skillfull")) {
                    exclude(it.name)
                }
            }
        }
        // 打包前清空
        dependsOn clearJar
        dependsOn copyJar
        // 指定依赖包的路径
        manifest {
            attributes "Manifest-Version": 1.0,
                    'Class-Path': project.configurations.productionRuntimeClasspath.files.collect { "lib/$it.name" }.join(' ')
        }
    }
}
