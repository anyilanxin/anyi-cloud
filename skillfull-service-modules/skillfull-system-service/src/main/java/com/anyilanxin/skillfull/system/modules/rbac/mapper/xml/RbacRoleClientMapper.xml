<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.anyilanxin.skillfull.system.modules.rbac.mapper.RbacRoleClientMapper">
  <resultMap type="com.anyilanxin.skillfull.system.modules.rbac.entity.RbacRoleClientEntity" id="RbacRoleClientMap">
    <result property="roleClient" column="role_client" jdbcType="VARCHAR"/>
    <result property="roleId" column="role_id" jdbcType="VARCHAR"/>
    <result property="clientDetailId" column="client_detail_id" jdbcType="VARCHAR"/>
  </resultMap>

  <!-- @formatter:off -->
    <!--数据库字段-->
    <sql id="Column_List">
        role_client, role_id, client_detail_id
    </sql>

    <!--数据库字段待别名-->
    <sql id="Column_List_Ali">
        ali.role_client, ali.role_id, ali.client_detail_id
    </sql>

     <!--数据库字段-->
    <sql id="Column_List_Page_Ali">
        ali.role_client, ali.role_id, ali.client_detail_id
    </sql>


    <sql id="Column_Role_List_Ali">
        ali.role_id, ali.role_name, ali.role_sys_code, ali.data_auth_type, ali.custom_data_auth_data,
        ali.role_code, ali.parent_role_id, ali.enable_delete, ali.auto_bind, ali.role_status, ali.remark,
        ali.unique_help, ali.create_area_code, ali.create_position_code, ali.create_org_sys_code,
        ali.create_system_code, ali.create_tenant_id, ali.create_user_id, ali.create_user_name, ali.create_time,
        ali.update_user_id, ali.update_user_name, ali.update_time, ali.del_flag
    </sql>


    <!-- 获取客户端角色权限 -->
    <select id="selectRoleListById" resultType="java.lang.String">
         SELECT ali.role_id
         FROM sys_rbac_role_client srrc
         LEFT JOIN sys_rbac_role ali ON srrc.role_id = ali.role_id
         WHERE ali.del_flag = 0
               AND srrc.client_detail_id = #{id, jdbcType=VARCHAR}
    </select>


    <!-- 获取客户端角色权限(完整数据) -->
    <select id="selectRoleAllInfoListById"
            resultType="com.anyilanxin.skillfull.system.modules.rbac.service.dto.RbacRoleSimpleDto">
        SELECT <include refid="Column_Role_List_Ali"/>
        FROM sys_rbac_role_client srrc
        LEFT JOIN sys_rbac_role ali ON srrc.role_id = ali.role_id
        WHERE ali.del_flag = 0
          AND srrc.client_detail_id = #{id, jdbcType=VARCHAR}
    </select>


    <!-- 获取客户端角色 -->
    <select id="getClientAuthRole" resultType="com.anyilanxin.skillfull.corecommon.model.auth.RoleInfo">
        SELECT
            srr.role_id,
            srr.role_name,
            srr.role_code,
            srcd.client_detail_id,
            srcd.client_id
        FROM sys_rbac_client_details srcd
        INNER JOIN sys_rbac_role_client srrc ON srcd.client_detail_id = srrc.client_detail_id
        INNER JOIN sys_rbac_role srr ON srr.role_id = srrc.role_id
        WHERE
            srr.role_status = 1
          AND srr.del_flag = 0
          AND srcd.del_flag = 0
          AND srcd.client_detail_id = #{clientDetailId, jdbcType=VARCHAR}
    </select>


    <!-- 通过客户端角色id物理删除 -->
    <delete id="physicalDeleteById">
        DELETE
        FROM sys_rbac_role_client
        WHERE role_client = #{id, jdbcType=VARCHAR}
    </delete>


    <!-- 通过字典id物理批量删除 -->
    <delete id="physicalDeleteBatchIds">
        DELETE
        FROM  sys_rbac_role_client
        WHERE role_client IN
        <foreach collection="coll" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>


    <!-- 通过id逻辑删除 -->
    <update id="deleteById">
        UPDATE sys_rbac_role_client
        <set>
            del_flag = 1,
         </set>
        WHERE role_client = #{roleClient, jdbcType=VARCHAR}
    </update>


    <!-- 通过id批量逻辑删除 -->
    <update id="deleteBatchIds">
        UPDATE sys_rbac_role_client
        <set>
            del_flag = 1,
        </set>
        WHERE role_client IN
        <foreach collection="coll" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
    <!-- @formatter:off -->
</mapper>
