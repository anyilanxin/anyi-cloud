description = "AnYi Cloud Process Service"

def bootJar = true

dependencies {
    implementation project(':anyi-cloud-corebase-modules:anyi-cloud-core-mvc')
    implementation project(':anyi-cloud-coreauth-modules:anyi-cloud-coreoauth-oauth2-resourcemvc')
    implementation project(':anyi-cloud-corebase-modules:anyi-cloud-core-stream')
    implementation project(':anyi-cloud-corebase-modules:anyi-cloud-core-redis')
    implementation project(':anyi-cloud-corebase-modules:anyi-cloud-core-process')
    implementation project(':anyi-cloud-corebase-modules:anyi-cloud-core-database')
    implementation project(':anyi-cloud-adapter-modules:anyi-cloud-adapter-process')
    implementation project(':anyi-cloud-adapterrpc-modules:anyi-cloud-rpcadapter-message')
    implementation project(':anyi-cloud-adapterrpc-modules:anyi-cloud-rpcadapter-system')
    implementation 'org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter-webapp'
    implementation 'org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter-rest'
//    implementation 'org.python:jython'
//    implementation 'org.jruby:jruby-complete'
//    implementation 'javax.xml.bind:jaxb-api'
//    implementation 'org.codehaus.groovy:groovy-all'
    implementation 'io.seata:seata-spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-undertow'
}


configurations.configureEach {
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
}


processResources {
    filteringCharset = 'UTF-8'
    include('*.yml', 'banner.txt')
}
