<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.anyilanxin.anyicloudee.process.modules.auxiliary.mapper.SequenceFlowMapper">
  <resultMap type="com.anyilanxin.anyicloudee.process.modules.auxiliary.entity.SequenceFlowEntity"
             id="SequenceFlowMap">
    <result property="sequenceFlowId" column="sequence_flow_id" jdbcType="VARCHAR"/>
    <result property="processInstanceId" column="process_instance_id" jdbcType="VARCHAR"/>
    <result property="processDefinitionKey" column="process_definition_key" jdbcType="VARCHAR"/>
    <result property="targetBpmnActivityId" column="target_bpmn_activity_id" jdbcType="VARCHAR"/>
    <result property="targetActivityInstanceId" column="target_activity_instance_id" jdbcType="VARCHAR"/>
    <result property="elementBpmnId" column="element_bpmn_id" jdbcType="VARCHAR"/>
    <result property="remark" column="remark" jdbcType="VARCHAR"/>
    <result property="createAreaCode" column="create_area_code" jdbcType="VARCHAR"/>
    <result property="createPositionCode" column="create_position_code" jdbcType="VARCHAR"/>
    <result property="createOrgSysCode" column="create_org_sys_code" jdbcType="VARCHAR"/>
    <result property="createSystemCode" column="create_system_code" jdbcType="VARCHAR"/>
    <result property="createUserId" column="create_user_id" jdbcType="VARCHAR"/>
    <result property="createUserName" column="create_user_name" jdbcType="VARCHAR"/>
    <result property="createTenantId" column="create_tenant_id" jdbcType="VARCHAR"/>
    <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    <result property="updateUserId" column="update_user_id" jdbcType="VARCHAR"/>
    <result property="updateUserName" column="update_user_name" jdbcType="VARCHAR"/>
    <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    <result property="delFlag" column="del_flag" jdbcType="INTEGER"/>
  </resultMap>

  <!-- @formatter:off -->
    <!--数据库字段-->
    <sql id="Column_List">
        sequence_flow_id, process_instance_id,process_definition_key, target_bpmn_activity_id, target_activity_instance_id,
        element_bpmn_id, remark, create_area_code, create_position_code, create_org_sys_code, create_system_code,
        create_user_id, create_user_name, create_tenant_id, create_time, update_user_id, update_user_name,
        update_time, del_flag
    </sql>

    <!--数据库字段待别名-->
    <sql id="Column_List_Ali">
        ali.sequence_flow_id, ali.process_instance_id, ali.process_definition_key, ali.target_bpmn_activity_id,
        ali.target_activity_instance_id, ali.element_bpmn_id, ali.remark, ali.create_area_code,
        ali.create_position_code, ali.create_org_sys_code, ali.create_system_code, ali.create_user_id,
        ali.create_user_name, ali.create_tenant_id, ali.create_time, ali.update_user_id, ali.update_user_name,
        ali.update_time, ali.del_flag
    </sql>

     <!--数据库字段-->
    <sql id="Column_List_Page_Ali">
        ali.sequence_flow_id, ali.process_instance_id, ali.process_definition_key, ali.target_bpmn_activity_id,
        ali.target_activity_instance_id, ali.element_bpmn_id, ali.remark, ali.create_area_code,
        ali.create_position_code, ali.create_org_sys_code, ali.create_system_code, ali.create_user_id,
        ali.create_user_name, ali.create_tenant_id, ali.create_time, ali.update_user_id, ali.update_user_name,
        ali.update_time, ali.del_flag
    </sql>


    <!-- 通过连线id物理删除 -->
    <delete id="physicalDeleteById">
        DELETE
        FROM act_custom_sequence_flow
        WHERE sequence_flow_id = #{id, jdbcType=VARCHAR}
    </delete>


    <!-- 通过字典id物理批量删除 -->
    <delete id="physicalDeleteBatchIds">
        DELETE
        FROM  act_custom_sequence_flow
        WHERE sequence_flow_id IN
        <foreach collection="coll" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>


    <!-- 通过id逻辑删除 -->
    <update id="deleteById">
        UPDATE act_custom_sequence_flow
        <set>
            del_flag = 1,
         </set>
        WHERE sequence_flow_id = #{sequenceFlowId, jdbcType=VARCHAR}
    </update>


    <!-- 通过id批量逻辑删除 -->
    <update id="deleteBatchIds">
        UPDATE act_custom_sequence_flow
        <set>
            del_flag = 1,
        </set>
        WHERE sequence_flow_id IN
        <foreach collection="coll" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
    <!-- @formatter:off -->
</mapper>
